// Mocks generated by Mockito 5.4.6 from annotations
// in product_list_app/test/unit/domain/usecases/get_cart_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:product_list_app/domain/entities/cart_entity.dart' as _i2;
import 'package:product_list_app/domain/repositories/cart_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCartEntity_0 extends _i1.SmartFake implements _i2.CartEntity {
  _FakeCartEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i3.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CartEntity> getCart(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCart, [id]),
            returnValue: _i4.Future<_i2.CartEntity>.value(
              _FakeCartEntity_0(this, Invocation.method(#getCart, [id])),
            ),
          )
          as _i4.Future<_i2.CartEntity>);

  @override
  _i4.Future<Map<String, dynamic>> createCart(Map<String, dynamic>? cartData) =>
      (super.noSuchMethod(
            Invocation.method(#createCart, [cartData]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);
}
